[project]
name = "pyutils"
version = "0.12.1"
description = "Python utilities"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "cloudpickle>=3.1.1",
    "structlog>=25.2.0",
    "opentelemetry-sdk>=1.37.0",
    "psutil>=7.0.0",
    "pydantic>=2.11.3",
    "pyyaml>=6.0.2",
    "jsonpath-ng>=1.7.0",
    "fsspec>=2025.3.2",
]

[project.optional-dependencies]
core = [
    "cloudpickle>=3.1.1",
]
logging = [
    "structlog>=25.2.0",
    "opentelemetry-sdk>=1.37.0",
    "psutil>=7.0.0",
]
jpath = [
    "pydantic>=2.11.3",
    "jsonpath-ng>=1.7.0",
]
pydantic = [
    "pydantic>=2.11.3",
    "pyyaml>=6.0.2",
]
fileapi = [
    "fsspec>=2025.5.1",
    "pydantic>=2.11.5",
]

[tool.uv]
dev-dependencies = [
    "ipykernel>=6.29.5",
    "pyright>=1.1.399",
    "pytest>=8.3.5",
    "ruff>=0.11.6",
    "uv>=0.6.16",
    "visidata>=3.1.1",
    "gcsfs>=2025.5.1", # for fileapi
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"


[tool.hatch.build.targets.wheel]
packages = ["src/pyutils"]


[tool.pyright]
venvPath = "."
venv = ".venv"


[tool.ruff]
target-version = "py313"
line-length = 120
indent-width = 4
fix = true

[tool.ruff.format]
quote-style = "double"
indent-style = "tab"
docstring-code-format = true
skip-magic-trailing-comma = false


[tool.ruff.lint]
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]

ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
]


[tool.ruff.lint.isort]
combine-as-imports = true
known-first-party = ["src"]


[tool.ruff.lint.pep8-naming]
classmethod-decorators = [
    "pydantic.validator", # Allow Pydantic's `@validator` decorator to trigger class method treatment.
]


[tool.dagster]
project_name = "ai-dev-pipeline"
module_name = "pipeline.v2.definitions"
code_location_name = "ai-dev-pipeline"
python_version = "3.13"


[tool.pytest]
testpaths = ["tests"]
log_format = "%(asctime)s [%(levelname)8s] %(message)s"
log_date_format = "%Y-%m-%d %H:%M:%S"

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "function"
